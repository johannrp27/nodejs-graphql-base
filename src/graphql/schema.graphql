type Query {
  product(id: ID!): Product
  products: [Product]
}

type Product {
  id: ID!
  name: String!
  image: String!
  description: String!
  price: Int!
  createdAt: String!
  categoryId: ID!
  category: Category!
}

type AuthResponse {
  access_token: String!
  user: User!
}

type User {
  id: ID
  email: String
  role: String
  createdAt: String
}

type Category {
  id: ID!
  name: String!
  image: String!
  createdAt: String!
}

input CreateProductInput {
  name: String!
  price: Int!
  image: String!
  description: String!
  categoryId: ID!
}

input UpdateProductInput {
  name: String
  price: Int
  image: String
  description: String
  categoryId: ID
}

type Mutation {
  login(email: String!, password: String!): AuthResponse
  createProduct(productInput: CreateProductInput!): Product
  updateProduct(id: ID!, productInput: UpdateProductInput!): Product
  deleteProduct(id: ID!): ID
}